// <auto-generated />
using System;
using KafkaCDC.Deals.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KafkaCDC.Deals.Data.Migration
{
    [DbContext(typeof(DealDbContext))]
    [Migration("20220523130527_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KafkaCDC.Common.Entities.Outbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uuid");

                    b.Property<string>("AggregateType")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOccurred")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Payload")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OutboxEvents");
                });

            modelBuilder.Entity("KafkaCDC.Deals.Domain.Deal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DealStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("DealType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("InitialPriceRangeHigh")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InitialPriceRangeLow")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("LastModifiedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("RevisedPriceRangeHigh")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RevisedPriceRangeLow")
                        .HasColumnType("numeric");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Deals");
                });
#pragma warning restore 612, 618
        }
    }
}
